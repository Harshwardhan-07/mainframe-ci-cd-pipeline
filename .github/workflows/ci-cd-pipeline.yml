name: CI/CD Pipeline for COBOL, REXX, and JCL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up JDK (if needed for JCL integration)
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Set up COBOL (Install GNU COBOL compiler)
      run: |
        sudo apt-get update
        sudo apt-get install -y gnucobol || (echo "gnucobol installation failed, building from source..." && \
        sudo apt-get install -y build-essential && \
        sudo apt-get install -y autoconf automake libtool && \
        git clone https://github.com/gnucobol/gnucobol.git && \
        cd gnucobol && \
        ./autogen.sh && \
        ./configure && \
        make && \
        sudo make install)

    - name: Set up REXX (Install REXX interpreter)
      run: |
        sudo apt-get install -y regina-rexx

    - name: Install Zowe CLI (Official Installation)
      run: |
        sudo apt-get install -y nodejs npm
        sudo npm install -g @zowe/cli

    - name: Debug Zowe CLI
      run: |
        zowe --version
        zowe --help

    - name: Set up Zowe Profile (with GitHub Secrets)
      run: |
        zowe config init --globalConfig
        zowe config set zosmf.profiles.zos123.host=${{ secrets.ZOSMF_HOST }} --globalConfig
        zowe config set zosmf.profiles.zos123.port=10443 --globalConfig
        zowe config set zosmf.profiles.zos123.user=${{ secrets.ZOSMF_USER }} --globalConfig
        zowe config set zosmf.profiles.zos123.password=${{ secrets.ZOSMF_PASSWORD }} --globalConfig
        zowe config set zosmf.profiles.zos123.ssl=true --globalConfig

    - name: Run COBOL Job
      run: |
        cd cobol
        cobc -x hello_world.cbl -o hello_world
        ./hello_world

    - name: Run REXX Script
      run: |
        cd rexx
        rexx hello_world.rexx

    - name: Execute JCL Jobs
      run: |
        cd jcl
        zowe jobs submit lf run_cobol_job
        zowe jobs submit lf run_rexx_job

    - name: Run Unit Tests
      run: |
        echo "Running unit tests..."

    - name: Deploy to QA Environment
      if: success()
      run: |
        echo "Deploying to QA environment..."

    - name: Deploy to Production Environment
      if: success()
      run: |
        echo "Deploying to production..."

    - name: Notify Success
      run: |
        echo "Pipeline executed successfully!"

  failure:
    runs-on: ubuntu-latest

    steps:
    - name: Notify Failure
      run: |
        echo "Pipeline execution faile
